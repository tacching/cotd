# cotd Namespace
apiVersion: v1
kind: Namespace
metadata:
  namespace: ab
  name: ab
---
# cotd Service
apiVersion: v1
kind: Service
metadata:
  namespace: ab
  name: cotd
  labels:
    app: cotd
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: cotd
---
# cats Service
apiVersion: v1
kind: Service
metadata:
  namespace: ab
  name: cats
  labels:
    app: cotd
    version: v1
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: cotd
    version: v1
---
# cities Service
apiVersion: v1
kind: Service
metadata:
  namespace: ab
  name: cities
  labels:
    app: cotd
    version: v2
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: cotd
    version: v2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: ab
  name: cotd-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cotd
        version: v1
    spec:
      containers:
      - name: cotd
        image: stefanopicozzi/cats
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: ab
  name: cotd-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cotd
        version: v2
    spec:
      containers:
      - name: cotd
        image: stefanopicozzi/cities
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
---
# Ingress Resource (gateway)
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ab
  name: gateway
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - http:
      paths:
      - path: /.*
        backend:
          serviceName: cotd
          servicePort: 8080
---
